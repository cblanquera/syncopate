/**
 * Syncopate - Turn async to sync in JS
 *
 * @version 0.0.3
 * @author Christian Blanquera <cblanquera@openovate.com>
 * @website https://github.com/cblanquera/syncopate
 * @license MIT
 */
!function(){var t=function(){var t={},n={},e=[],o=[],r=function(){},u=function(){},i=!1,p=t;t.onNext=function(t){return r=t,this},t.onThread=function(t){return u=t,this},t.scope=function(t){return p=t,this},t.stack=function(){return e},t.then=function(t){return e.push(t),i||(i=!0,a.apply(null,o)),this},t.thread=function(t,e){return n[t]=e,this},t.threads=function(){return n};var a=function(){if(!e.length)return i=!1,n=Array.prototype.slice.apply(arguments),void r.call(p,null,e);var t=e.shift(),n=Array.prototype.slice.apply(arguments),o=arguments.callee;return n.push(o),"function"==typeof setImmediate?void setImmediate(function(){t.apply(p,n),r.call(p,t,e)}):(t.apply(p,n),void r.call(p,t,e))};return a.thread=function(){var t=Array.prototype.slice.apply(arguments),o=t.shift();if(t.push(a),"function"==typeof n[o]){if("function"==typeof setImmediate)return void setImmediate(function(){n[o].apply(p,t),u.call(p,n[o],e)});n[o].apply(p,t),u.call(p,n[o],e)}},t};"object"==typeof module&&module.exports?module.exports=t:"function"==typeof define?define(function(){return t}):"function"==typeof jQuery&&"function"==typeof jQuery.extend?jQuery.extend({syncopate:t}):"object"==typeof window&&(window.syncopate=t)}();